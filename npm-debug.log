0 info it worked if it ends with ok
1 verbose cli [ 'C:\\Program Files\\nodejs\\\\node.exe',
1 verbose cli   'C:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js',
1 verbose cli   'install',
1 verbose cli   'combined-stream' ]
2 info using npm@1.4.9
3 info using node@v0.10.28
4 verbose node symlink C:\Program Files\nodejs\\node.exe
5 warn package.json lemieripetizioni3@0.1.0 No description
6 warn package.json lemieripetizioni3@0.1.0 No README data
7 warn package.json angular-animate@1.2.23 No repository field.
8 verbose readDependencies using package.json deps
9 verbose cache add [ 'combined-stream', null ]
10 verbose cache add name=undefined spec="combined-stream" args=["combined-stream",null]
11 verbose parsed url { protocol: null,
11 verbose parsed url   slashes: null,
11 verbose parsed url   auth: null,
11 verbose parsed url   host: null,
11 verbose parsed url   port: null,
11 verbose parsed url   hostname: null,
11 verbose parsed url   hash: null,
11 verbose parsed url   search: null,
11 verbose parsed url   query: null,
11 verbose parsed url   pathname: 'combined-stream',
11 verbose parsed url   path: 'combined-stream',
11 verbose parsed url   href: 'combined-stream' }
12 silly lockFile ce008678-combined-stream combined-stream
13 verbose lock combined-stream C:\Users\Giuseppe\AppData\Roaming\npm-cache\ce008678-combined-stream.lock
14 silly lockFile ce008678-combined-stream combined-stream
15 silly lockFile ce008678-combined-stream combined-stream
16 verbose addNamed [ 'combined-stream', '' ]
17 verbose addNamed [ null, '*' ]
18 silly lockFile 1fb01260-combined-stream combined-stream@
19 verbose lock combined-stream@ C:\Users\Giuseppe\AppData\Roaming\npm-cache\1fb01260-combined-stream.lock
20 silly addNameRange { name: 'combined-stream', range: '*', hasData: false }
21 verbose url raw combined-stream
22 verbose url resolving [ 'https://registry.npmjs.org/', './combined-stream' ]
23 verbose url resolved https://registry.npmjs.org/combined-stream
24 info trying registry request attempt 1 at 22:10:44
25 verbose etag "3D87DOR2ARTUP46QW58DGIP4J"
26 http GET https://registry.npmjs.org/combined-stream
27 http 304 https://registry.npmjs.org/combined-stream
28 silly registry.get cb [ 304,
28 silly registry.get   { date: 'Mon, 06 Oct 2014 20:10:45 GMT',
28 silly registry.get     server: 'Apache',
28 silly registry.get     via: '1.1 varnish',
28 silly registry.get     'last-modified': 'Mon, 06 Oct 2014 20:09:51 GMT',
28 silly registry.get     'cache-control': 'max-age=60',
28 silly registry.get     etag: '"3D87DOR2ARTUP46QW58DGIP4J"',
28 silly registry.get     'x-served-by': 'cache-fra1228-FRA',
28 silly registry.get     'x-cache': 'HIT',
28 silly registry.get     'x-cache-hits': '5',
28 silly registry.get     'x-timer': 'S1412626245.201514,VS0,VE0',
28 silly registry.get     vary: 'Accept',
28 silly registry.get     'content-length': '0',
28 silly registry.get     'keep-alive': 'timeout=10, max=50',
28 silly registry.get     connection: 'Keep-Alive' } ]
29 verbose etag combined-stream from cache
30 silly addNameRange number 2 { name: 'combined-stream', range: '*', hasData: true }
31 silly addNameRange versions [ 'combined-stream',
31 silly addNameRange   [ '0.0.0', '0.0.1', '0.0.2', '0.0.3', '0.0.4', '0.0.5' ] ]
32 verbose addNamed [ 'combined-stream', '0.0.5' ]
33 verbose addNamed [ '0.0.5', '0.0.5' ]
34 silly lockFile a9334ff4-combined-stream-0-0-5 combined-stream@0.0.5
35 verbose lock combined-stream@0.0.5 C:\Users\Giuseppe\AppData\Roaming\npm-cache\a9334ff4-combined-stream-0-0-5.lock
36 silly lockFile a9334ff4-combined-stream-0-0-5 combined-stream@0.0.5
37 silly lockFile a9334ff4-combined-stream-0-0-5 combined-stream@0.0.5
38 silly lockFile 1fb01260-combined-stream combined-stream@
39 silly lockFile 1fb01260-combined-stream combined-stream@
40 silly resolved [ { author:
40 silly resolved      { name: 'Felix GeisendÃ¶rfer',
40 silly resolved        email: 'felix@debuggable.com',
40 silly resolved        url: 'http://debuggable.com/' },
40 silly resolved     name: 'combined-stream',
40 silly resolved     description: 'A stream that emits multiple other streams one after another.',
40 silly resolved     version: '0.0.5',
40 silly resolved     homepage: 'https://github.com/felixge/node-combined-stream',
40 silly resolved     repository:
40 silly resolved      { type: 'git',
40 silly resolved        url: 'git://github.com/felixge/node-combined-stream.git' },
40 silly resolved     main: './lib/combined_stream',
40 silly resolved     scripts: { test: 'node test/run.js' },
40 silly resolved     engines: { node: '>= 0.8' },
40 silly resolved     dependencies: { 'delayed-stream': '0.0.5' },
40 silly resolved     devDependencies: { far: '~0.0.7' },
40 silly resolved     readme: '# combined-stream [![Build Status](https://travis-ci.org/felixge/node-combined-stream.svg?branch=master)](https://travis-ci.org/felixge/node-combined-stream)\n\nA stream that emits multiple other streams one after another.\n\n## Installation\n\n``` bash\nnpm install combined-stream\n```\n\n## Usage\n\nHere is a simple example that shows how you can use combined-stream to combine\ntwo files into one:\n\n``` javascript\nvar CombinedStream = require(\'combined-stream\');\nvar fs = require(\'fs\');\n\nvar combinedStream = CombinedStream.create();\ncombinedStream.append(fs.createReadStream(\'file1.txt\'));\ncombinedStream.append(fs.createReadStream(\'file2.txt\'));\n\ncombinedStream.pipe(fs.createWriteStream(\'combined.txt\'));\n```\n\nWhile the example above works great, it will pause all source streams until\nthey are needed. If you don\'t want that to happen, you can set `pauseStreams`\nto `false`:\n\n``` javascript\nvar CombinedStream = require(\'combined-stream\');\nvar fs = require(\'fs\');\n\nvar combinedStream = CombinedStream.create({pauseStreams: false});\ncombinedStream.append(fs.createReadStream(\'file1.txt\'));\ncombinedStream.append(fs.createReadStream(\'file2.txt\'));\n\ncombinedStream.pipe(fs.createWriteStream(\'combined.txt\'));\n```\n\nHowever, what if you don\'t have all the source streams yet, or you don\'t want\nto allocate the resources (file descriptors, memory, etc.) for them right away?\nWell, in that case you can simply provide a callback that supplies the stream\nby calling a `next()` function:\n\n``` javascript\nvar CombinedStream = require(\'combined-stream\');\nvar fs = require(\'fs\');\n\nvar combinedStream = CombinedStream.create();\ncombinedStream.append(function(next) {\n  next(fs.createReadStream(\'file1.txt\'));\n});\ncombinedStream.append(function(next) {\n  next(fs.createReadStream(\'file2.txt\'));\n});\n\ncombinedStream.pipe(fs.createWriteStream(\'combined.txt\'));\n```\n\n## API\n\n### CombinedStream.create([options])\n\nReturns a new combined stream object. Available options are:\n\n* `maxDataSize`\n* `pauseStreams`\n\nThe effect of those options is described below.\n\n### combinedStream.pauseStreams = `true`\n\nWhether to apply back pressure to the underlaying streams. If set to `false`,\nthe underlaying streams will never be paused. If set to `true`, the\nunderlaying streams will be paused right after being appended, as well as when\n`delayedStream.pipe()` wants to throttle.\n\n### combinedStream.maxDataSize = `2 * 1024 * 1024`\n\nThe maximum amount of bytes (or characters) to buffer for all source streams.\nIf this value is exceeded, `combinedStream` emits an `\'error\'` event.\n\n### combinedStream.dataSize = `0`\n\nThe amount of bytes (or characters) currently buffered by `combinedStream`.\n\n### combinedStream.append(stream)\n\nAppends the given `stream` to the combinedStream object. If `pauseStreams` is\nset to `true, this stream will also be paused right away.\n\n`streams` can also be a function that takes one parameter called `next`. `next`\nis a function that must be invoked in order to provide the `next` stream, see\nexample above.\n\nRegardless of how the `stream` is appended, combined-stream always attaches an\n`\'error\'` listener to it, so you don\'t have to do that manually.\n\nSpecial case: `stream` can also be a String or Buffer.\n\n### combinedStream.write(data)\n\nYou should not call this, `combinedStream` takes care of piping the appended\nstreams into itself for you.\n\n### combinedStream.resume()\n\nCauses `combinedStream` to start drain the streams it manages. The function is\nidempotent, and also emits a `\'resume\'` event each time which usually goes to\nthe stream that is currently being drained.\n\n### combinedStream.pause();\n\nIf `combinedStream.pauseStreams` is set to `false`, this does nothing.\nOtherwise a `\'pause\'` event is emitted, this goes to the stream that is\ncurrently being drained, so you can use it to apply back pressure.\n\n### combinedStream.end();\n\nSets `combinedStream.writable` to false, emits an `\'end\'` event, and removes\nall streams from the queue.\n\n### combinedStream.destroy();\n\nSame as `combinedStream.end()`, except it emits a `\'close\'` event instead of\n`\'end\'`.\n\n## License\n\ncombined-stream is licensed under the MIT license.\n',
40 silly resolved     readmeFilename: 'Readme.md',
40 silly resolved     bugs: { url: 'https://github.com/felixge/node-combined-stream/issues' },
40 silly resolved     _id: 'combined-stream@0.0.5',
40 silly resolved     _shasum: '29ed76e5c9aad07c4acf9ca3d32601cce28697a2',
40 silly resolved     _from: 'combined-stream@',
40 silly resolved     _resolved: 'https://registry.npmjs.org/combined-stream/-/combined-stream-0.0.5.tgz' } ]
41 info install combined-stream@0.0.5 into C:\Users\Giuseppe\Dropbox\angularjs\lemieripetizioni
42 info installOne combined-stream@0.0.5
43 info C:\Users\Giuseppe\Dropbox\angularjs\lemieripetizioni\node_modules\combined-stream unbuild
44 verbose tar unpack C:\Users\Giuseppe\AppData\Roaming\npm-cache\combined-stream\0.0.5\package.tgz
45 silly lockFile 14fbd4cf-oni-node-modules-combined-stream tar://C:\Users\Giuseppe\Dropbox\angularjs\lemieripetizioni\node_modules\combined-stream
46 verbose lock tar://C:\Users\Giuseppe\Dropbox\angularjs\lemieripetizioni\node_modules\combined-stream C:\Users\Giuseppe\AppData\Roaming\npm-cache\14fbd4cf-oni-node-modules-combined-stream.lock
47 silly lockFile cd096cad-ombined-stream-0-0-5-package-tgz tar://C:\Users\Giuseppe\AppData\Roaming\npm-cache\combined-stream\0.0.5\package.tgz
48 verbose lock tar://C:\Users\Giuseppe\AppData\Roaming\npm-cache\combined-stream\0.0.5\package.tgz C:\Users\Giuseppe\AppData\Roaming\npm-cache\cd096cad-ombined-stream-0-0-5-package-tgz.lock
49 silly gunzTarPerm modes [ '755', '644' ]
50 silly gunzTarPerm extractEntry package.json
51 silly gunzTarPerm extractEntry License
52 silly gunzTarPerm extractEntry Readme.md
53 silly gunzTarPerm extractEntry lib/combined_stream.js
54 silly lockFile 14fbd4cf-oni-node-modules-combined-stream tar://C:\Users\Giuseppe\Dropbox\angularjs\lemieripetizioni\node_modules\combined-stream
55 silly lockFile 14fbd4cf-oni-node-modules-combined-stream tar://C:\Users\Giuseppe\Dropbox\angularjs\lemieripetizioni\node_modules\combined-stream
56 silly lockFile cd096cad-ombined-stream-0-0-5-package-tgz tar://C:\Users\Giuseppe\AppData\Roaming\npm-cache\combined-stream\0.0.5\package.tgz
57 silly lockFile cd096cad-ombined-stream-0-0-5-package-tgz tar://C:\Users\Giuseppe\AppData\Roaming\npm-cache\combined-stream\0.0.5\package.tgz
58 info preinstall combined-stream@0.0.5
59 verbose readDependencies using package.json deps
60 verbose readDependencies using package.json deps
61 verbose cache add [ 'delayed-stream@0.0.5', null ]
62 verbose cache add name=undefined spec="delayed-stream@0.0.5" args=["delayed-stream@0.0.5",null]
63 verbose parsed url { protocol: null,
63 verbose parsed url   slashes: null,
63 verbose parsed url   auth: null,
63 verbose parsed url   host: null,
63 verbose parsed url   port: null,
63 verbose parsed url   hostname: null,
63 verbose parsed url   hash: null,
63 verbose parsed url   search: null,
63 verbose parsed url   query: null,
63 verbose parsed url   pathname: 'delayed-stream@0.0.5',
63 verbose parsed url   path: 'delayed-stream@0.0.5',
63 verbose parsed url   href: 'delayed-stream@0.0.5' }
64 verbose cache add name="delayed-stream" spec="0.0.5" args=["delayed-stream","0.0.5"]
65 verbose parsed url { protocol: null,
65 verbose parsed url   slashes: null,
65 verbose parsed url   auth: null,
65 verbose parsed url   host: null,
65 verbose parsed url   port: null,
65 verbose parsed url   hostname: null,
65 verbose parsed url   hash: null,
65 verbose parsed url   search: null,
65 verbose parsed url   query: null,
65 verbose parsed url   pathname: '0.0.5',
65 verbose parsed url   path: '0.0.5',
65 verbose parsed url   href: '0.0.5' }
66 verbose addNamed [ 'delayed-stream', '0.0.5' ]
67 verbose addNamed [ '0.0.5', '0.0.5' ]
68 silly lockFile 1ace22b7-delayed-stream-0-0-5 delayed-stream@0.0.5
69 verbose lock delayed-stream@0.0.5 C:\Users\Giuseppe\AppData\Roaming\npm-cache\1ace22b7-delayed-stream-0-0-5.lock
70 verbose url raw delayed-stream
71 verbose url resolving [ 'https://registry.npmjs.org/', './delayed-stream' ]
72 verbose url resolved https://registry.npmjs.org/delayed-stream
73 info trying registry request attempt 1 at 22:10:45
74 verbose etag "4SUDXLHFL6L0N65NG7PXHAXW5"
75 http GET https://registry.npmjs.org/delayed-stream
76 http 304 https://registry.npmjs.org/delayed-stream
77 silly registry.get cb [ 304,
77 silly registry.get   { date: 'Mon, 06 Oct 2014 20:10:45 GMT',
77 silly registry.get     server: 'Apache',
77 silly registry.get     via: '1.1 varnish',
77 silly registry.get     'last-modified': 'Mon, 06 Oct 2014 20:10:25 GMT',
77 silly registry.get     'cache-control': 'max-age=60',
77 silly registry.get     etag: '"4SUDXLHFL6L0N65NG7PXHAXW5"',
77 silly registry.get     'x-served-by': 'cache-fra1228-FRA',
77 silly registry.get     'x-cache': 'HIT',
77 silly registry.get     'x-cache-hits': '2',
77 silly registry.get     'x-timer': 'S1412626245.765396,VS0,VE0',
77 silly registry.get     vary: 'Accept',
77 silly registry.get     'content-length': '0',
77 silly registry.get     'keep-alive': 'timeout=10, max=50',
77 silly registry.get     connection: 'Keep-Alive' } ]
78 verbose etag delayed-stream from cache
79 silly lockFile 1ace22b7-delayed-stream-0-0-5 delayed-stream@0.0.5
80 silly lockFile 1ace22b7-delayed-stream-0-0-5 delayed-stream@0.0.5
81 silly resolved [ { author:
81 silly resolved      { name: 'Felix GeisendÃ¶rfer',
81 silly resolved        email: 'felix@debuggable.com',
81 silly resolved        url: 'http://debuggable.com/' },
81 silly resolved     name: 'delayed-stream',
81 silly resolved     description: 'Buffers events from a stream until you are ready to handle them.',
81 silly resolved     version: '0.0.5',
81 silly resolved     homepage: 'https://github.com/felixge/node-delayed-stream',
81 silly resolved     repository:
81 silly resolved      { type: 'git',
81 silly resolved        url: 'git://github.com/felixge/node-delayed-stream.git' },
81 silly resolved     main: './lib/delayed_stream',
81 silly resolved     engines: { node: '>=0.4.0' },
81 silly resolved     dependencies: {},
81 silly resolved     devDependencies: { fake: '0.2.0', far: '0.0.1' },
81 silly resolved     readme: '# delayed-stream\n\nBuffers events from a stream until you are ready to handle them.\n\n## Installation\n\n``` bash\nnpm install delayed-stream\n```\n\n## Usage\n\nThe following example shows how to write a http echo server that delays its\nresponse by 1000 ms.\n\n``` javascript\nvar DelayedStream = require(\'delayed-stream\');\nvar http = require(\'http\');\n\nhttp.createServer(function(req, res) {\n  var delayed = DelayedStream.create(req);\n\n  setTimeout(function() {\n    res.writeHead(200);\n    delayed.pipe(res);\n  }, 1000);\n});\n```\n\nIf you are not using `Stream#pipe`, you can also manually release the buffered\nevents by calling `delayedStream.resume()`:\n\n``` javascript\nvar delayed = DelayedStream.create(req);\n\nsetTimeout(function() {\n  // Emit all buffered events and resume underlaying source\n  delayed.resume();\n}, 1000);\n```\n\n## Implementation\n\nIn order to use this meta stream properly, here are a few things you should\nknow about the implementation.\n\n### Event Buffering / Proxying\n\nAll events of the `source` stream are hijacked by overwriting the `source.emit`\nmethod. Until node implements a catch-all event listener, this is the only way.\n\nHowever, delayed-stream still continues to emit all events it captures on the\n`source`, regardless of whether you have released the delayed stream yet or\nnot.\n\nUpon creation, delayed-stream captures all `source` events and stores them in\nan internal event buffer. Once `delayedStream.release()` is called, all\nbuffered events are emitted on the `delayedStream`, and the event buffer is\ncleared. After that, delayed-stream merely acts as a proxy for the underlaying\nsource.\n\n### Error handling\n\nError events on `source` are buffered / proxied just like any other events.\nHowever, `delayedStream.create` attaches a no-op `\'error\'` listener to the\n`source`. This way you only have to handle errors on the `delayedStream`\nobject, rather than in two places.\n\n### Buffer limits\n\ndelayed-stream provides a `maxDataSize` property that can be used to limit\nthe amount of data being buffered. In order to protect you from bad `source`\nstreams that don\'t react to `source.pause()`, this feature is enabled by\ndefault.\n\n## API\n\n### DelayedStream.create(source, [options])\n\nReturns a new `delayedStream`. Available options are:\n\n* `pauseStream`\n* `maxDataSize`\n\nThe description for those properties can be found below.\n\n### delayedStream.source\n\nThe `source` stream managed by this object. This is useful if you are\npassing your `delayedStream` around, and you still want to access properties\non the `source` object.\n\n### delayedStream.pauseStream = true\n\nWhether to pause the underlaying `source` when calling\n`DelayedStream.create()`. Modifying this property afterwards has no effect.\n\n### delayedStream.maxDataSize = 1024 * 1024\n\nThe amount of data to buffer before emitting an `error`.\n\nIf the underlaying source is emitting `Buffer` objects, the `maxDataSize`\nrefers to bytes.\n\nIf the underlaying source is emitting JavaScript strings, the size refers to\ncharacters.\n\nIf you know what you are doing, you can set this property to `Infinity` to\ndisable this feature. You can also modify this property during runtime.\n\n### delayedStream.maxDataSize = 1024 * 1024\n\nThe amount of data to buffer before emitting an `error`.\n\nIf the underlaying source is emitting `Buffer` objects, the `maxDataSize`\nrefers to bytes.\n\nIf the underlaying source is emitting JavaScript strings, the size refers to\ncharacters.\n\nIf you know what you are doing, you can set this property to `Infinity` to\ndisable this feature.\n\n### delayedStream.dataSize = 0\n\nThe amount of data buffered so far.\n\n### delayedStream.readable\n\nAn ECMA5 getter that returns the value of `source.readable`.\n\n### delayedStream.resume()\n\nIf the `delayedStream` has not been released so far, `delayedStream.release()`\nis called.\n\nIn either case, `source.resume()` is called.\n\n### delayedStream.pause()\n\nCalls `source.pause()`.\n\n### delayedStream.pipe(dest)\n\nCalls `delayedStream.resume()` and then proxies the arguments to `source.pipe`.\n\n### delayedStream.release()\n\nEmits and clears all events that have been buffered up so far. This does not\nresume the underlaying source, use `delayedStream.resume()` instead.\n\n## License\n\ndelayed-stream is licensed under the MIT license.\n',
81 silly resolved     readmeFilename: 'Readme.md',
81 silly resolved     bugs: { url: 'https://github.com/felixge/node-delayed-stream/issues' },
81 silly resolved     _id: 'delayed-stream@0.0.5',
81 silly resolved     _shasum: 'd4b1f43a93e8296dfe02694f4680bc37a313c73f',
81 silly resolved     _from: 'delayed-stream@0.0.5',
81 silly resolved     _resolved: 'https://registry.npmjs.org/delayed-stream/-/delayed-stream-0.0.5.tgz',
81 silly resolved     scripts: {} } ]
82 info install delayed-stream@0.0.5 into C:\Users\Giuseppe\Dropbox\angularjs\lemieripetizioni\node_modules\combined-stream
83 info installOne delayed-stream@0.0.5
84 info C:\Users\Giuseppe\Dropbox\angularjs\lemieripetizioni\node_modules\combined-stream\node_modules\delayed-stream unbuild
85 verbose tar unpack C:\Users\Giuseppe\AppData\Roaming\npm-cache\delayed-stream\0.0.5\package.tgz
86 silly lockFile 215cd105-ream-node-modules-delayed-stream tar://C:\Users\Giuseppe\Dropbox\angularjs\lemieripetizioni\node_modules\combined-stream\node_modules\delayed-stream
87 verbose lock tar://C:\Users\Giuseppe\Dropbox\angularjs\lemieripetizioni\node_modules\combined-stream\node_modules\delayed-stream C:\Users\Giuseppe\AppData\Roaming\npm-cache\215cd105-ream-node-modules-delayed-stream.lock
88 silly lockFile 8632265d-delayed-stream-0-0-5-package-tgz tar://C:\Users\Giuseppe\AppData\Roaming\npm-cache\delayed-stream\0.0.5\package.tgz
89 verbose lock tar://C:\Users\Giuseppe\AppData\Roaming\npm-cache\delayed-stream\0.0.5\package.tgz C:\Users\Giuseppe\AppData\Roaming\npm-cache\8632265d-delayed-stream-0-0-5-package-tgz.lock
90 silly gunzTarPerm modes [ '755', '644' ]
91 silly gunzTarPerm extractEntry .gitignore
92 silly gunzTarPerm extractEntry License
93 silly gunzTarPerm extractEntry Makefile
94 silly gunzTarPerm extractEntry package.json
95 silly gunzTarPerm extractEntry Readme.md
96 silly gunzTarPerm extractEntry lib/delayed_stream.js
97 silly gunzTarPerm extractEntry test/common.js
98 silly gunzTarPerm extractEntry test/run.js
99 silly gunzTarPerm extractEntry test/integration/test-delayed-http-upload.js
100 silly gunzTarPerm extractEntry test/integration/test-delayed-stream-auto-pause.js
101 silly gunzTarPerm extractEntry test/integration/test-delayed-stream-pause.js
102 silly gunzTarPerm extractEntry test/integration/test-delayed-stream.js
103 silly gunzTarPerm extractEntry test/integration/test-handle-source-errors.js
104 silly gunzTarPerm extractEntry test/integration/test-max-data-size.js
105 silly gunzTarPerm extractEntry test/integration/test-pipe-resumes.js
106 silly gunzTarPerm extractEntry test/integration/test-proxy-readable.js
107 silly lockFile 215cd105-ream-node-modules-delayed-stream tar://C:\Users\Giuseppe\Dropbox\angularjs\lemieripetizioni\node_modules\combined-stream\node_modules\delayed-stream
108 silly lockFile 215cd105-ream-node-modules-delayed-stream tar://C:\Users\Giuseppe\Dropbox\angularjs\lemieripetizioni\node_modules\combined-stream\node_modules\delayed-stream
109 silly lockFile 8632265d-delayed-stream-0-0-5-package-tgz tar://C:\Users\Giuseppe\AppData\Roaming\npm-cache\delayed-stream\0.0.5\package.tgz
110 silly lockFile 8632265d-delayed-stream-0-0-5-package-tgz tar://C:\Users\Giuseppe\AppData\Roaming\npm-cache\delayed-stream\0.0.5\package.tgz
111 info preinstall delayed-stream@0.0.5
112 verbose readDependencies using package.json deps
113 verbose readDependencies using package.json deps
114 silly resolved []
115 verbose about to build C:\Users\Giuseppe\Dropbox\angularjs\lemieripetizioni\node_modules\combined-stream\node_modules\delayed-stream
116 info build C:\Users\Giuseppe\Dropbox\angularjs\lemieripetizioni\node_modules\combined-stream\node_modules\delayed-stream
117 verbose linkStuff [ false,
117 verbose linkStuff   false,
117 verbose linkStuff   false,
117 verbose linkStuff   'C:\\Users\\Giuseppe\\Dropbox\\angularjs\\lemieripetizioni\\node_modules\\combined-stream\\node_modules' ]
118 info linkStuff delayed-stream@0.0.5
119 verbose linkBins delayed-stream@0.0.5
120 verbose linkMans delayed-stream@0.0.5
121 verbose rebuildBundles delayed-stream@0.0.5
122 info install delayed-stream@0.0.5
123 info postinstall delayed-stream@0.0.5
124 verbose about to build C:\Users\Giuseppe\Dropbox\angularjs\lemieripetizioni\node_modules\combined-stream
125 info build C:\Users\Giuseppe\Dropbox\angularjs\lemieripetizioni\node_modules\combined-stream
126 verbose linkStuff [ false,
126 verbose linkStuff   false,
126 verbose linkStuff   false,
126 verbose linkStuff   'C:\\Users\\Giuseppe\\Dropbox\\angularjs\\lemieripetizioni\\node_modules' ]
127 info linkStuff combined-stream@0.0.5
128 verbose linkBins combined-stream@0.0.5
129 verbose linkMans combined-stream@0.0.5
130 verbose rebuildBundles combined-stream@0.0.5
131 verbose rebuildBundles [ 'delayed-stream' ]
132 info install combined-stream@0.0.5
133 info postinstall combined-stream@0.0.5
134 error peerinvalid The package grunt-contrib-htmlmin does not satisfy its siblings' peerDependencies requirements!
134 error peerinvalid Peer grunt-contrib@0.11.0 wants grunt-contrib-htmlmin@~0.2.0
135 error System Windows_NT 6.1.7601
136 error command "C:\\Program Files\\nodejs\\\\node.exe" "C:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js" "install" "combined-stream"
137 error cwd C:\Users\Giuseppe\Dropbox\angularjs\lemieripetizioni
138 error node -v v0.10.28
139 error npm -v 1.4.9
140 error code EPEERINVALID
141 verbose exit [ 1, true ]
